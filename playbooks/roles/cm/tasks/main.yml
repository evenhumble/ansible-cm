---
- name: Load OS specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_distribution|lower }}.yml"
        - "{{ ansible_os_family|lower }}.yml"
        - defaults.yml
      paths:
        - ../vars

- name: clear cm software
  yum: 
    name: "{{ item }}"
    state: removed
  with_items: "{{ packages|default([]) }}"
  ignore_errors: true
 
- name: Ensure required packages are installed (yum)
  yum:
    name: "{{ item }}"
    update_cache: yes
    state: installed
  with_items: "{{ packages|default([]) }}"

- name: copy java file
  copy: src=java dest=/usr/share

- name: prepare database
  shell: "/usr/share/cmf/schema/scm_prepare_database.sh mysql cm cm 123456"

- name: start cloudera-scm-server
  service: name=cloudera-scm-server enabled=yes state=started

- name: install python-setuptools
  yum: name=python-setuptools update_cache=yes state=installed

- name: Copy Cluster Install Scripts
  file: path={{ item }} state=absent
  with_items:
    - /tmp/python
    - /tmp/python.tar
- copy: src=python.tar dest=/tmp/python.tar
- shell: tar -xf /tmp/python.tar -C /tmp/
- shell: "python /tmp/python/setup.py install"
  args: 
    chdir: "/tmp/python"
- template: src=clouderaconfig.ini.j2 dest=/tmp/python/wd_cdh_api/clouderaconfig.ini
- wait_for: port=7180 delay=5
- shell: "/etc/init.d/cloudera-scm-server restart | sleep 120"
