---
- name: set swappiness to 1
  sysctl: name=vm.swappiness value=1 state=present ignoreerrors=yes

- name: disable Transparent Huge Pages until reboot
  shell: echo never > /sys/kernel/mm/transparent_hugepage/enabled && echo never > /sys/kernel/mm/transparent_hugepage/defrag
  ignore_errors: true

- name: disable selinux
  selinux: state=disabled

- name: disable firewalld
  service: name=firewalld state=stopped enabled=no

- name: Set hosts and hostname
  template: src="{{ item }}.j2" dest=/etc/{{ item }} mode=0644
  with_items:
   - hosts
   - hostname

- name: set timezone CST +0800
  shell: cp -f /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
  ignore_errors: true

- name: set timezone to Asia/Shanghai
  shell: timedatectl set-timezone Asia/Shanghai
  ignore_errors: true
  
- name: set nofile limits
  lineinfile: dest=/etc/security/limits.conf
              insertbefore="^ End of file"
              state=present
              line="{{ item }}"
  with_items:
    - "* soft nofile 65536"
    - "* hard nofile 65536"

- name: set nproc limits
  lineinfile: dest=/etc/security/limits.d/90-nproc.conf
              insertafter=EOF
              state=present
              create=yes
              line="{{ item }}"
              mode=0644
  with_items:
    - "* soft nproc 32768"
    - "* hard nproc 32768"

- name: restart machine
  shell: sleep 3 && reboot
  ignore_errors: true
  async: 1
  poll: 0

- name: wait to reboot 
  local_action:
    module: wait_for
      host={{ ansible_ssh_host }}
      port=22
      search_regex=OpenSSH
      delay=30
      state=started
      timeout=600

- name: check timezone
  shell: date -R
  register: var_reg
- assert: { that: "'0800' in var_reg.stdout" }

- name: check hostname
  shell: hostname
  register: var_reg
- assert: { that: "var_reg.stdout == '{{ inventory_hostname }}'" }

- name: check hosts
  shell: cat /etc/hosts
  register: var_reg
- assert: { that: "'{{ inventory_hostname }}' in var_reg.stdout" }

- name: check firewalld
  shell: systemctl status firewalld | grep "Active:" | awk '{print $2}'
  register: var_reg
- assert: { that: "var_reg.stdout == 'inactive'" }

- name: check selinux
  shell: systemctl status selinux | grep "Active:" | awk '{print $2}'
  register: var_reg
- assert: { that: "var_reg.stdout == 'inactive'" }

- name: check Transparent Huge Pages
  shell: cat /sys/kernel/mm/transparent_hugepage/enabled /sys/kernel/mm/transparent_hugepage/defrag | grep never | wc -l
  register: var_reg
- assert: { that: "var_reg.stdout == '2'" }

#- name: restart machine
#  shell: sleep 3 && reboot
#  ignore_errors: true
#  async: 1
#  poll: 0
#
#- name: wait to reboot 
#  local_action:
#    module: wait_for
#      host={{ ansible_ssh_host }}
#      port=22
#      delay=30
#      search_regex=OpenSSH
#      state=started
